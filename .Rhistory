# library
library(tidyverse)
library(openxlsx)
library(cleaninginspectoR)
rm(list = ls())
# library
library(tidyverse)
library(openxlsx)
library(cleaninginspectoR)
# load
data <- "./inputs/37.REACH_YEM_Dataset_Joint Market Monitoring Initiative (JMMI)_March 2021.xlsx"
sheets <- openxlsx::getSheetNames(data)
SheetList <- lapply(sheets,openxlsx::read.xlsx,xlsxFile=data)
names(SheetList) <- sheets
View(SheetList)
clean <- SheetList[[3]]
log <- SheetList[[10]]
View(clean)
View(log)
data <- "./inputs/37.REACH_YEM_Dataset_Joint Market Monitoring Initiative (JMMI)_March 2021.xlsx"
sheets <- openxlsx::getSheetNames(data)
SheetList <- lapply(sheets,openxlsx::read.xlsx,xlsxFile=data)
names(SheetList) <- sheets
clean <- SheetList[[3]]
log <- SheetList[[10]]
clean.i <- inspect_all(clean)
clean.i <- clean.i %>% mutate(uuid= data[.$index,"uuid",drop=T],
area = data[.$index,"market_location",drop=T])
clean.i <- clean.i %>% mutate(uuid= clean.i[.$index,"uuid",drop=T],
area = clean.i[.$index,"market_location",drop=T])
View(clean.i)
View(clean.i)
clean.i <- clean.i %>% mutate(uuid= clean[.$index,"uuid",drop=T],
area = clean[.$index,"market_location",drop=T])
View(clean.i)
clean.i <- clean.i %>% filter(is.na(area))
clean.i <- inspect_all(clean)
clean.i <- clean.i %>% mutate(uuid= clean[.$index,"uuid",drop=T],
area = clean[.$index,"market_location",drop=T])
clean.i <- clean.i %>% filter(!is.na(area))
clean.i <- semi_join(clean.i, log, "uuid")
View(log)
clean.i <- semi_join(clean.i, log, c("uuid"= "ids"))
View(clean.i)
clean.i <- inspect_all(clean)
clean.i <- clean.i %>% mutate(uuid= clean[.$index,"uuid",drop=T],
area = clean[.$index,"market_location",drop=T])
clean.i <- clean.i %>% filter(!is.na(area))
clean.i <- semi_join(clean.i, log, c("uuid"= "ids"))
write.csv(clean.i, paste("./outputs/yemen_jmmi_outliers_",lubridate::today(),".csv"))
# souce
source("./R/minimum_standards.R")
# load
data <- "./inputs/38.REACH_YEM_Dataset_Joint Market Monitoring Initiative (JMMI)_April 2021.xlsx"
sheets <- openxlsx::getSheetNames(data)
SheetList <- lapply(sheets,openxlsx::read.xlsx,xlsxFile=data)
names(SheetList) <- sheets
clean <- SheetList[[3]]
View(clean)
min.stand <- minium_standards(clean, "distric_name")
# library
library(tidyverse)
library(openxlsx)
library(cleaninginspectoR)
min.stand <- minium_standards(clean, "distric_name")
min.stand <- minium_standards(clean, "district_name")
View(minium_standards)
# min standards
vec <- select(clean, starts_with("calc_price"))
View(vec)
# min standards
vec <- names(select(clean, starts_with("calc_price")))
min.stand <- minium_standards(clean, "district_name", vec)
View(min.stand)
View(minium_standards)
clean.m <- clean %>% select(district_name) %>% melt()
View(clean.m)
min.dist <- clean.m %>% group_by(district_name) %>% summarise(., n=n()) %>% mutate(minimum_standards = ifelse(n >= 3, "requirement met", "requirement not met"))
View(min.stand)
View(min.dist)
rm(list = ls())
# library
library(tidyverse)
library(openxlsx)
library(cleaninginspectoR)
source("./R/data_falsification.R")
# souce
source("./R/minimum_standards.R")
# load
data <- "./inputs/38.REACH_YEM_Dataset_Joint Market Monitoring Initiative (JMMI)_April 2021.xlsx"
sheets <- openxlsx::getSheetNames(data)
SheetList <- lapply(sheets,openxlsx::read.xlsx,xlsxFile=data)
names(SheetList) <- sheets
clean <- SheetList[[3]]
log <- SheetList[[10]]
tool <- read.xlsx("./inputs/REACH_JMMI_Tool_April_2021.xlsx")
View(tool)
raw <- read.csv("./inputs/REACH_JMMI_Tool_April_2021_-_all_versions_-_False_-_2021-04-22-08-37-57.csv", stringsAsFactors = FALSE)
View(raw)
enum.false <- calculateEnumeratorSimilarity(raw, tool, "enum_id", "district_ID_All")
View(tool)
View(raw)
enum.false <- calculateEnumeratorSimilarity(raw, tool, "select_one_organization_name_All", "district_ID_All")
tool <- read.xlsx("./inputs/REACH_JMMI_Tool_April_2021.xlsx")
raw <- read.csv("./inputs/REACH_JMMI_Tool_April_2021_-_all_versions_-_False_-_2021-04-22-08-37-57.csv", stringsAsFactors = FALSE)
enum.false <- calculateEnumeratorSimilarity(raw, tool, "select_one_organization_name_All", "district_ID_All")
View(tool)
enum.false2 <- calculateDifferences(raw, tool)
library(cluster)
enum.false <- calculateEnumeratorSimilarity(raw, tool, "select_one_organization_name_All", "district_ID_All")
enum.false2 <- calculateDifferences(raw, tool)
View(enum.false2)
library(openxlsx)
library(cleaninginspectoR)
# library
library(tidyverse)
library(openxlsx)
library(cleaninginspectoR)
library(cluster)
# souce
source("./R/minimum_standards.R")
source("./R/data_falsification.R")
source("./R/check_log.R")
# load
data <- "./inputs/39.REACH_YEM_Dataset_Joint Market Monitoring Initiative (JMMI)_May 2021.xlsx"
sheets <- openxlsx::getSheetNames(data)
SheetList <- lapply(sheets,openxlsx::read.xlsx,xlsxFile=data)
names(SheetList) <- sheets
clean <- SheetList[[3]]
log <- SheetList[[10]]
tool <- read.xlsx("./inputs/REACH_JMMI_Tool_April_2021.xlsx")
#enum.false <- calculateEnumeratorSimilarity(raw, tool, "select_one_organization_name_All", "district_ID_All")
enum.false2 <- calculateDifferences(clean, tool)
View(enum.false2)
write.xlsx(enum.false2, paste0("./outputs/yemen_jmm_similar surveys_",lubridate::today(),".xlsx"))
# min standards
vec <- names(select(clean, starts_with("calc_price")))
min.stand <- minium_standards(clean, "district_name", vec)
View(min.stand)
min.stand <- minium_standards(clean, "district_name", vec) %>% filter(minimum_standadars == "requirement not met")
min.stand <- minium_standards(clean, "district_name", vec) %>% filter(minimum_standards == "requirement not met")
write.xlsx(min.stand, paste0("./outputs/yemen_jmm_min standards_",lubridate::today(),".xlsx"))
clean.m <- clean %>% select(district_name) %>% melt()
min.dist <- clean.m %>% group_by(district_name) %>% summarise(., n=n()) %>% mutate(minimum_standards = ifelse(n >= 3, "requirement met", "requirement not met"))
View(min.stand)
# cleaning log
clean.i <- inspect_all(clean)
clean.i <- clean.i %>% mutate(uuid= clean[.$index,"X_uuid",drop=T],
area = clean[.$index,"market_location",drop=T])
View(clean.i)
clean.i <- clean.i %>% filter(!is.na(area))
clean.i <- semi_join(clean.i, log, c("uuid"= "ids"))
View(clean.i)
View(log)
# check log
log$old_Var <- 1
View(clean)
log.c <- check_log(clean, log, "variables", "old_Var", "new_var", "X_uuid", "ids")
log <- log %>%  filter(variables %in% names(clean))
View(log)
log.c <- check_log(clean, log, "variables", "old_Var", "new_var", "X_uuid", "ids")
log.c <- check_log(clean, log, "variables", "old_Var", "new_values", "X_uuid", "ids")
View(log.c)
write.csv(clean.i, paste("./outputs/yemen_jmmi_outliers_",lubridate::today(),".csv"))
min.dist <- clean.m %>% group_by(district_name) %>% summarise(., n=n()) %>% mutate(minimum_standards = ifelse(n >= 3, "requirement met", "requirement not met"))
View(min.dist)
rm(list = ls())
# library
library(tidyverse)
library(openxlsx)
library(cleaninginspectoR)
library(cluster)
# souce
source("./R/minimum_standards.R")
source("./R/data_falsification.R")
source("./R/check_log.R")
# load
data <- "./inputs/41.REACH_YEM_Dataset_Joint Market Monitoring Initiative (JMMI)_July 2021.xlsx"
sheets <- openxlsx::getSheetNames(data)
SheetList <- lapply(sheets,openxlsx::read.xlsx,xlsxFile=data)
names(SheetList) <- sheets
clean <- SheetList[["Cleaned Data"]]
clean <- clean %>% mutate(index = row_number())
clean <- dplyr::rename(clean, uuid = X_uuid)
log <- SheetList[["Cleaning Log - Fixed"]]
View(log)
tool <- read.xlsx("./inputs/REACH_JMMI_Tool_April_2021.xlsx")
#enum.false <- calculateEnumeratorSimilarity(raw, tool, "select_one_organization_name_All", "district_ID_All")
enum.false2 <- calculateDifferences(clean, tool)
write.xlsx(enum.false2, paste0("./outputs/yemen_jmm_similar surveys_",lubridate::today(),".xlsx"))
# min standards
vec <- names(select(clean, starts_with("calc_price")))
min.stand <- minium_standards(clean, "district_name", vec) %>% filter(minimum_standards == "requirement not met")
View(min.stand)
clean.m <- clean %>% select(district_name) %>% melt()
min.dist <- clean.m %>% group_by(district_name) %>% summarise(., n=n()) %>% mutate(minimum_standards = ifelse(n >= 3, "requirement met", "requirement not met"))
write.xlsx(min.dist, paste0("./outputs/yemen_jmm_min standards_",lubridate::today(),".xlsx"))
# cleaning log
clean.i <- inspect_all(clean) %>% filter(!is.na(index)) %>% left_join(select(clean, "uuid", "district_name", "index"), by = "index")
View(clean.i)
clean.i <- semi_join(clean.i, log, c("uuid"= "ids"))
write.csv(clean.i, paste("./outputs/yemen_jmmi_outliers_",lubridate::today(),".csv"))
# check log
log$old_Var <- 1
log <- log %>%  filter(variables %in% names(clean))
log.c <- check_log(clean, log, "variables", "old_Var", "new_values", "uuid", "ids")
View(log)
log <- SheetList[["Cleaning Log - Fixed"]]
View(log)
# check log
log$old_Var <- 1
log <- log %>%  filter(variables %in% names(clean))
View(clean)
log <- SheetList[["Cleaning Log - Fixed"]]
View(log)
# check log
log$old_Var <- 1
log.c <- check_log(clean, log, "variables", "old_Var", "new_values", "uuid", "ids")
clean$quantity_price_wage_All
clean$quantity_price_wage
View(log)
rm(list = ls())
# library
library(tidyverse)
library(openxlsx)
library(cleaninginspectoR)
library(cluster)
source("./R/data_falsification.R")
# souce
source("./R/minimum_standards.R")
source("./R/check_log.R")
# load
data <- "./inputs/42.REACH_YEM_Dataset_Joint Market Monitoring Initiative (JMMI)_August 2021.xlsx"
sheets <- openxlsx::getSheetNames(data)
SheetList <- lapply(sheets,openxlsx::read.xlsx,xlsxFile=data)
names(SheetList) <- sheets
clean <- SheetList[["Cleaned Data"]]
clean <- clean %>% mutate(index = row_number())
clean <- dplyr::rename(clean, uuid = X_uuid)
log <- SheetList[["Cleaning Log - Fixed"]]
View(log)
tool <- read.xlsx("./inputs/REACH_JMMI_Tool_April_2021.xlsx")
#enum.false <- calculateEnumeratorSimilarity(raw, tool, "select_one_organization_name_All", "district_ID_All")
enum.false2 <- calculateDifferences(clean, tool)
write.xlsx(enum.false2, paste0("./outputs/yemen_jmm_similar surveys_",lubridate::today(),".xlsx"))
# min standards
vec <- names(select(clean, starts_with("calc_price")))
min.stand <- minium_standards(clean, "district_name", vec) %>% filter(minimum_standards == "requirement not met")
clean.m <- clean %>% select(district_name) %>% melt()
min.dist <- clean.m %>% group_by(district_name) %>% summarise(., n=n()) %>% mutate(minimum_standards = ifelse(n >= 3, "requirement met", "requirement not met"))
write.xlsx(min.dist, paste0("./outputs/yemen_jmm_min standards_",lubridate::today(),".xlsx"))
# cleaning log
clean.i <- inspect_all(clean) %>% filter(!is.na(index)) %>% left_join(select(clean, "uuid", "district_name", "index"), by = "index")
clean.i <- semi_join(clean.i, log, c("uuid"= "ids"))
write.csv(clean.i, paste("./outputs/yemen_jmmi_outliers_",lubridate::today(),".csv"))
# check log
log$old_Var <- 1
log <- log %>%  filter(variables %in% names(clean))
log.c <- check_log(clean, log, "variables", "old_Var", "new_values", "uuid", "ids")
View(log)
# check log
log$old_Var <- 1
log <- log %>%  filter(variables %in% names(clean))
View(log)
log.c <- check_log(clean, log, "variables", "old_Var", "new_values", "uuid", "ids")
View(clean)
View(SheetList)
View(clean)
log.c <- check_log(clean, log, variable = "variables",
old_log_var = "old_Var", new_log_var = "new_values",
uuid_data = "uuid", uuid_log = "ids")
# outliers
outliers <- inspect_all(clean)
View(outliers)
View(outliers)
# outliers
outliers <- inspect_all(clean) %>% filter(!is.na(index)) %>% left_join(. , select(clean, "uuid", "index"), "index")
View(outliers)
# outliers
`%nin%` <- Negate(`%in%`)
write.csv(clean.i, paste("./outputs/yemen_outliers_",lubridate::today(),".csv"))
write.csv(clean.i, paste("./outputs/yemen_outliers_",lubridate::today(),".csv"))
log <- log %>%  filter(variables %in% names(clean))
log.c <- check_log(clean, log, variable = "variables",
old_log_var = "old_Var", new_log_var = "new_values",
uuid_data = "uuid", uuid_log = "ids")
source("./R/check_log.R")
log.c <- check_log(clean, log, variable = "variables",
old_log_var = "old_Var", new_log_var = "new_values",
uuid_data = "uuid", uuid_log = "ids")
